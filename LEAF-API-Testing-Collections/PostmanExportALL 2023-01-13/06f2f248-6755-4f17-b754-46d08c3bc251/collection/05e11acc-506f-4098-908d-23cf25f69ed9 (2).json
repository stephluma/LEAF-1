{"info":{"_postman_id":"05e11acc-506f-4098-908d-23cf25f69ed9","name":"zStorage","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Valentine POST Test","id":"262278b0-2d42-47b8-b1b3-0d335c30ab20","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n\t\"Name\" : \"MaxRawJson\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://httpbin.org/post","protocol":"http","host":["httpbin","org"],"path":["post"]}},"response":[]},{"name":"Local - getCSRFToken Copy","event":[{"listen":"test","script":{"id":"c57ea32b-2a69-4e4a-a2c3-644fa0144d1d","exec":[" \r","//const cookieJar = pm.cookies.jar();\r","////console.log(cookieJar.cookies);\r","//cookieJar.get('http://localhost', PHPSESSID, callback(error, cookie));\r","//console.log(cookieJar.status);\r","//cookieJar.set(URL, { name: PHPSESSID, value: cookieJar.cookie, httpOnly: true }, callback (error, cookie));\r","\r","\r","pm.test(\"Form-Categories.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime;\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","\r","\r","pm.test(\"Contains expected value\", function () {\r","    const response = pm.response.json();\r","    const catIDs = response.map(catID => catID.categoryID);         //catIDs is the array containing IDs\r","    //console.log(catIDs);\r","    pm.variables.set('catIDs', catIDs); //Creates a variable or updates an existing one.\r","                                        //2nd catIDs is the var defined on line 3 - Only works in collection runner\r","    console.log(catIDs);  //\r","\r","    let currentCatID = catIDs.shift();\r","    console.log(currentCatID);\r","    pm.expect(currentCatID).to.eql(\"form_b7c34\");  //    //form_d203e\r","\r","\r","});\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"94ef5633-60b5-466e-a324-38ce91df8460","exec":["\r","\r","\r","/* const random = Math.random().toString(36).substring(2);\r","const formCategories = \"formCategories \" + random;\r","pm.collectionVariables.set(\"formCategories\", formCategories);\r","*/\r","\r",""],"type":"text/javascript"}}],"id":"816e9d5d-6614-40c4-87ea-bc04e36e9cd0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{Local_URL}}/formWorkflow/getCSRFToken","host":["{{Local_URL}}"],"path":["formWorkflow","getCSRFToken"]}},"response":[]},{"name":"TutorialsPoint POST Request","id":"45e0938f-5662-4167-9e16-cedbb9658a64","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n   \"id\":1,\r\n   \"name\":\"MR Test\",\r\n   \"username\":\"Test1\",\r\n   \"email\":\"abc@gmail.com\",\r\n   \"address\":{\r\n      \"street\":\"qa street\",\r\n      \"suite\":\"Apt 123\",\r\n      \"city\":\"Kochi\",\r\n      \"zipcode\":\"49085\",\r\n      \"geo\":{\r\n         \"lat\":\"-3.3155\",\r\n         \"lng\":\"94.156\"\r\n      }\r\n   },\r\n   \"phone\":\"99599125\",\r\n   \"website\":\"Tutorialspoint.com\",\r\n   \"company\":{\r\n      \"name\":\"Tutorialspoint\",\r\n      \"catchPhrase\":\"Simple Easy Learning\",\r\n      \"bs\":\"Postman Tutorial\"\r\n   }\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://jsonplaceholder.typicode.com/users","protocol":"https","host":["jsonplaceholder","typicode","com"],"path":["users"]}},"response":[]},{"name":"GitHub","id":"f1c8c3ae-beda-4354-ad01-c23a817ebb44","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://github.com","protocol":"https","host":["github","com"]}},"response":[]},{"name":"Local - FIX Create Form Pete","event":[{"listen":"test","script":{"id":"1e6bef6d-a600-48a8-b2b8-09d084aed38b","exec":["//var xsrfCookie = postman.getResponseCookie(\"XSRF-TOKEN\");\r","//postman.setEnvironmentVariable(\"xsrf-token\", xsrfCookie.value);\r","\r","//pm.globals.get(CSRFToken:String):function â†’ *\r","\r","pm.environment.set(\"CSRFToken\", decodeURIComponent(pm.globals.get(\"CSRFToken\")));\r","\r","//console.log(postman);\r","\r","//var xsrfCookie = pm.getRequestCookie(\"XSRF-TOKEN\");\r","//var xsrfCookie = pm.getRequestCookie(\"XSRF-TOKEN\");\r","//pm.setEnvironmentVariable(\"xsrf-token\", xsrfCookie.value);\r","\t//console.log(xsrfCookie.value);\r","\r","/* Example from https://blogs.sap.com/2019/08/27/csrf-token-in-postman.-one-click-to-get-it-and-use-it./ */\r","// pm.globals.set(\"variable_key\", \"variable_value\");\r","// pm.test(\"Form-Categories.  Status = 200\", function () {\r","//     pm.response.to.have.status(200);\r","// });\r","\r","// var time = pm.response.responseTime;\r","// pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","// pm.test(\"JSON Contains expected value\", function () {\r","//     const response = pm.response.json();\r","//         //  create an array only with this ID\r","//     const catIDs = response.map(catID => catID.categoryID);         //catIDs is the array containing IDs\r","//     console.log(catIDs);\r","//     pm.variables.set('catIDs', catIDs); //2nd catIDs is the var defined on line 3 - Only works in collection runner\r","\r","//     let currentCatID = catIDs.shift();\r","//     console.log(currentCatID);\r","//     pm.expect(currentCatID).to.eql(\"form_b7c34\");  //    //form_d203e \r","// });\r","\r","// pm.test(\"Successful POST request\", function () {\r","// \tpm.expect(pm.response.code).to.be.oneOf([201, 202]);\r","// });\r","\r","// CONST RANDOM = MATH.RANDOM().TOSTRING(36).SUBSTRING(2);\r","\r","// CONST FORMCATEGORIES = \"FORMCATEGORIES \" + RANDOM;\r","// PM.COLLECTIONVARIABLES.SET(\"FORMCATEGORIES\", FORMCATEGORIES);\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"0fc167b9-bc0d-418f-9538-f3c0c537db90","exec":["//var xsrfCookie = postman.getResponseCookie(\"XSRF-TOKEN\");\r","//postman.setEnvironmentVariable(\"xsrf-token\", xsrfCookie.value);\r","\r","\r","/* Example from https://blogs.sap.com/2019/08/27/csrf-token-in-postman.-one-click-to-get-it-and-use-it./ */\r","// console.log('Pre-request Script from Request start');\r","\r","// // We don't need to do anything if it's GET or x-csrf-token header is explicitly presented\r","// if (pm.request.method !== 'GET' && !(pm.request.headers.has('x-csrf-token'))) {\r","\r","//   var csrfRequest = pm.request.clone();\r","//   console.log(csrfRequest);\r","//   csrfRequest.method = 'GET';\r","//   if (pm.request.method === 'POST') {\r","//     // for POST method usually it is ....<something>Collection in the URL\r","//     // so we add $top=1 just to quickly get csrf token; \r","//     // for PUT, PATCH or DELETE the same URL would be enough,\r","//     // because it points to the actual entity\r","//     csrfRequest.url = pm.request.url + '?$top=1';\r","//   }\r","\r","//   csrfRequest.upsertHeader({\r","//     key: 'xsrf-token', \t\t\t\t//'x-csrf-token',\r","//     value: 'fetch'\r","//   });\r","\r","//   pm.sendRequest(csrfRequest, function(err, res) {\r","//     console.log('pm.sendRequest start: ', err, res);\r","//     if (err) {\r","//       console.log(err);\r","//     } else {\r","//       //var csrfToken = res.headers.get('x-csrf-token');\r","//       var csrfToken = res.headers.get('xsrf-token');\r","\t\r","// \t  if (csrfToken) {\r","//         console.log('csrfToken fetched:' + csrfToken);\r","//         pm.request.headers.upsert({\r","//           key: 'x-csrf-token',\r","//           value: csrfToken\r","//         });\r","//       } else {\r","//         console.log('No csrf token fetched');\r","//       }\r","//     }\r","//     console.log('pm.sendRequest end');\r","//   });\r","// }\r","\r","// console.log('Pre-request Script from Request end');\r","\r","\r","\r","\r","////For POST requests\r","////Probably need to use the 'POST' address as listed in the LEAF API Documentation\r","////THIS ONLY WORKS by Executing TestCollection as a COLLECTION\r","  \r","/*   Lines 6 through 10 are valid (in different context)   */\r","\r","//const catIDs = pm.variables.get('catIDs');      //same array of categoryIDs created in GET request test\r","//console.log('Pre-request for POST request ' + catIDs);\r","//catIDs.shift();    //get first element/Id in array and return it. _(shift function by itself)\r","    \r","//pm.variables.set('currentCatID', catIDs.shift());    //array or modify original array (catIDs)  //Set variable currenCatID\r","\r","//// if(Array.isArray(catIDs) && catIDs.length > 0) {  //array item must have length > 0  (a valid Cat ID)\r","////     postman.setNextRequest('POST Category');      //iterate through all members of array   USE Test Name VID: 7:08-9:16\r","////     console.log('POST CATEGORY');                 //Can also use in Test section\r","//// } else {\r","////     postman.setNextRequest(null);\r","//// }\r","\r",""],"type":"text/javascript"}}],"id":"e6e7f17b-c517-45ee-b527-7873c4965495","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text"}],"body":{"mode":"raw","raw":"{\r\n\t\"title\" : \"form_1234\",\r\n\t\"priority\" : \"\",\r\n\t\"numform_b7c34\" : 1,\r\n\t\"CSRFToken\" : \"16de1df9ba2d2f0da4b409ff38d3d5b0a8455f07574c7e147bd0711a95f81c8c\",\r\n\t\"service\" : \"\"\r\n}\r\n ","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost/LEAF_Request_Portal/ajaxIndex.php?a=newform","protocol":"http","host":["localhost"],"path":["LEAF_Request_Portal","ajaxIndex.php"],"query":[{"key":"a","value":"newform"},{"key":"XSRF-TOKEN","value":"token","disabled":true}]}},"response":[]},{"name":"Local - Form Categories get CSRFToken","event":[{"listen":"test","script":{"id":"c57ea32b-2a69-4e4a-a2c3-644fa0144d1d","exec":[" \r","//PICK UP HERE \t\r","pm.environment.set(\"CSRFToken\", decodeURIComponent(pm.globals.get(\"CSRFToken\")));\r","\t//console.log({{xsrf-token}});\r","\t//console.log(xsrf-token);\r","\tconsole.log(\"XSRF-TOKEN Script run from GET request\")\r","\r","\r","\r","\r","\r","//const cookieJar = pm.cookies.jar();\r","////console.log(cookieJar.cookies);\r","//cookieJar.get('http://localhost', PHPSESSID, callback(error, cookie));\r","//console.log(cookieJar.status);\r","//cookieJar.set(URL, { name: PHPSESSID, value: cookieJar.cookie, httpOnly: true }, callback (error, cookie));\r","\r","\r","\r","// pm.test(\"Form-Categories.  Status = 200\", function () {\r","//     pm.response.to.have.status(200);\r","// });\r","\r","// var time = pm.response.responseTime;\r","\r","// pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","\r","\r","// pm.test(\"Contains expected value\", function () {\r","//     const response = pm.response.json();\r","//     const catIDs = response.map(catID => catID.categoryID);         //catIDs is the array containing IDs\r","//     //console.log(catIDs);\r","//     pm.variables.set('catIDs', catIDs); //Creates a variable or updates an existing one.\r","//                                         //2nd catIDs is the var defined on line 3 - Only works in collection runner\r","//     console.log(catIDs);  //\r","\r","//     let currentCatID = catIDs.shift();\r","//     console.log(currentCatID);\r","//     pm.expect(currentCatID).to.eql(\"form_b7c34\");  //    //form_d203e\r","\r","\r","// });\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"94ef5633-60b5-466e-a324-38ce91df8460","exec":["\r","\r","\r","/* const random = Math.random().toString(36).substring(2);\r","const formCategories = \"formCategories \" + random;\r","pm.collectionVariables.set(\"formCategories\", formCategories);\r","*/\r","\r",""],"type":"text/javascript"}}],"id":"2e11be48-624f-4c7f-a7ea-a42061f429d5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"body":{"mode":"urlencoded","urlencoded":[]},"url":{"raw":"{{Local_URL}}/form/categories","host":["{{Local_URL}}"],"path":["form","categories"]}},"response":[]},{"name":"Local - getCSRFToken In Progress","event":[{"listen":"test","script":{"id":"c57ea32b-2a69-4e4a-a2c3-644fa0144d1d","exec":[" \r","//const response = pm.response.json();\r","\r","\r","pm.test(\"Get CSRFToken\", function () {\r","    //const response = pm.response.json();    // response is stored js object\r","\tvar response = pm.response.text();\r","\tstr1 = response.slice(1);\r","\tstr2 = str1.slice(0, -1);\r","\ttoken = str2;\r","\tconsole.log(token);\r"," \r","\r","});\r","\r","\r","\r","    //     //  create an array with only this ID\r","    // const csrfTokens = response.map(csrfToken => csrfToken.text);  //csrfTokens = array with IDs;  .\r","    // pm.variables.set('csrfTokens', csrfTokens); //Creates a variable or updates an existing one.\r","    //                                     //2nd csrfTokens is the var defined on line 3 - Only works in collection runner\r","    // console.log(csrfTokens);  //\r","\r","    // let currentToken = csrfTokens.shift();\r","    // console.log(currentToken);\r","    // pm.expect(currentToken).to.eql(1896);  //    \r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"94ef5633-60b5-466e-a324-38ce91df8460","exec":["\r","\r","\r","/* const random = Math.random().toString(36).substring(2);\r","const formCategories = \"formCategories \" + random;\r","pm.collectionVariables.set(\"formCategories\", formCategories);\r","*/\r","\r",""],"type":"text/javascript"}}],"id":"4d3acf3e-ef02-418b-8555-91d11264b388","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{Local_URL}}/formWorkflow/getCSRFToken","host":["{{Local_URL}}"],"path":["formWorkflow","getCSRFToken"]}},"response":[]},{"name":"Local - Create Form NEW WIP","event":[{"listen":"test","script":{"id":"1e6bef6d-a600-48a8-b2b8-09d084aed38b","exec":["\r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"0fc167b9-bc0d-418f-9538-f3c0c537db90","exec":["\r","pm.globals.get(\"CSRFToken\");\r","console.log(\"CSRF Token for POST Request: \" + pm.globals.get(\"CSRFToken\"))\r","\r","\r","\r","\r","\r","\r","\r","\r","\r","\r",""],"type":"text/javascript"}}],"id":"1c05f60b-188a-4bce-b533-9d82b47196f9","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text"}],"body":{"mode":"raw","raw":"{\r\n\t\"CSRFToken\": \"f8dcdec6b2a48cccf1cca4090e496a8c517e1d492a8efc2c7f79de0eb0a45eea\",\r\n\t\"title\": \"form_1234\",\r\n\t\"priority\": \"\",\r\n\t\"numform_b7c34\": 1,\r\n\t\"service\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost/LEAF_Request_Portal/ajaxIndex.php?a=newform","protocol":"http","host":["localhost"],"path":["LEAF_Request_Portal","ajaxIndex.php"],"query":[{"key":"a","value":"newform"},{"key":"XSRF-TOKEN","value":"token","disabled":true}]}},"response":[]}]}