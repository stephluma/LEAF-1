{
	"info": {
		"_postman_id": "0f46832f-6cb3-4dff-8150-55d06ea69a82",
		"name": "LEAF-API-PreProd",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14390849",
		"_collection_link": "https://va-leaf-api.postman.co/workspace/LEAF-API-Testing~3173db71-59fd-4765-a790-cfbd653c3705/collection/14390849-0f46832f-6cb3-4dff-8150-55d06ea69a82?action=share&creator=14390849&source=collection_link"
	},
	"item": [
		{
			"name": "PP Portal - Base URL",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-All Forms",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});  //\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							" \r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const catIDs = response.map(catID => catID.categoryID);    //catIDs is array containing IDs  goes through each element of the array\r",
							"    pm.variables.set('catIDs', catIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd catIDs is the var defined on line 3 - Only works in collection runner\r",
							"    console.log(catIDs);  //\r",
							"\r",
							"    let currentCatID = catIDs.shift();\r",
							"    console.log(currentCatID);\r",
							"    pm.expect(currentCatID).to.eql(\"form_373c0\");  //  PP: form_373c0  Local:  form_b7c34\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Form-All-Form-Metadata",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.name);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"!Exclamation!\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/indicator/list?_=1681415398446",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"indicator",
						"list"
					],
					"query": [
						{
							"key": "_",
							"value": "1681415398446"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "X PP Portal - Form Get Specific Form",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"form/workflow - Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);  //Test for 200 OK\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const catIDs = response.map(catID => catID.categoryID);    //catIDs is array containing IDs  goes through each element of the array\r",
							"    pm.variables.set('catIDs', catIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd catIDs is the var defined on line 3 - Only works in collection runner\r",
							"    console.log(catIDs);  //\r",
							"\r",
							"    let currentCatID = catIDs.shift();\r",
							"    console.log(currentCatID);\r",
							"    pm.expect(currentCatID).to.eql(\"form_373c0\");  //  PP: form_373c0  Local:  form_b7c34\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/categories/category&id='_form_373c0'",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"categories",
						"category&id='_form_373c0'"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Form-Indicators",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-Categories.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"pm.test(\"JSON Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const catIDs = response.map(catID => catID.categoryID);         //catIDs is the array containing IDs\r",
							"    console.log(catIDs);\r",
							"    pm.variables.set('catIDs', catIDs); //2nd catIDs is the var defined on line 3 - Only works in collection runner\r",
							"});\r",
							"\r",
							"/* \r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(jsonData.response);   \r",
							"    pm.expect(jsonData.categoryID).to.eql(\"form_11e07\");  //iterate through\r",
							"});\r",
							"*/\r",
							"\r",
							"\r",
							"\r",
							"//    \"categoryID\": \"form_11e07\",\r",
							"//    \"categoryName\": \"AUT (Copy)\"\r",
							"/*\r",
							"pm.test(\"Response time is less than limit\", function() {\r",
							"var limit = 10;\r",
							"pm.expect(pm.response.responseTime, \"Response time was longer than \" + limit + \" ms.\").to.be.below(limit);\r",
							"console.log(\"Response Time: \" + pm.response.responseTime + \" ms\" + \" / Response Date: \" + pm.response.headers.get(\"Date\"));\r",
							"});\r",
							"\r",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/* const random = Math.random().toString(36).substring(2);\r",
							"const formCategories = \"formCategories \" + random;\r",
							"pm.collectionVariables.set(\"formCategories\", formCategories);\r",
							"*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n    \"categoryID\": \"form_11e07\",\r\n    \"categoryName\": \"AUT (Copy)\"   \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Create Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "service",
							"value": "'Acute Care'",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Load Testing MR - Create New Request Container",
							"type": "text"
						},
						{
							"key": "priority",
							"value": "Normal",
							"type": "text"
						},
						{
							"key": "numform_94f77",
							"value": "1",
							"type": "text"
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/new",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"new"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Set-Request-Title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "******* MR Load Testing - Title Changed THIS REQUEST CAN BE DELETED ******",
							"type": "text"
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						},
						{
							"key": "recordID",
							"value": "1801",
							"type": "text",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "Normal",
							"type": "text",
							"disabled": true
						},
						{
							"key": "numform_94f77",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "recordID",
							"value": "1801",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/1801/title",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"1801",
						"title"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Set-Request-Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "numform_94f77",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						},
						{
							"key": "serviceID",
							"value": "28",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/1801/service?recordID=1801&serviceID=75",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"1801",
						"service"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": "",
							"disabled": true
						},
						{
							"key": "title",
							"value": "",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "",
							"disabled": true
						},
						{
							"key": "recordID",
							"value": "1801"
						},
						{
							"key": "serviceID",
							"value": "75"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Set-Request-Initiator",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "numform_94f77",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "initiator",
							"value": "OITBIRRichaM1",
							"type": "text"
						},
						{
							"key": "userID",
							"value": "OITBIRRichaM1",
							"description": "Richard, Max L. OR 262 - OITBIRRichaM1",
							"type": "text"
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"description": "<td class=\"employeeSelectorName\" title=\"262 - OITBIRRichaM1\">Richard, Max&nbsp;L.<br><span class=\"employeeSelectorTitle\">Pentad Group</span></td>",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/1801/initiator",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"1801",
						"initiator"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": "",
							"disabled": true
						},
						{
							"key": "title",
							"value": "",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "",
							"disabled": true
						},
						{
							"key": "recordID",
							"value": "1801",
							"disabled": true
						},
						{
							"key": "serviceID",
							"value": "75",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "X PP-Send-Reminder-Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "service",
							"value": "Office of the Associate Director of Patient Services",
							"type": "text",
							"disabled": true
						},
						{
							"key": "title",
							"value": "Load Testing MR",
							"type": "text",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "Normal",
							"type": "text",
							"disabled": true
						},
						{
							"key": "numform_b7c34",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/1801/reminder/2",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"1801",
						"reminder",
						"2"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-POST-Testing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/indicator/list/unabridged",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"indicator",
						"list",
						"unabridged"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-POST-TEMPLATE Copy 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Load Testing MR",
							"type": "text",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "Normal",
							"type": "text",
							"disabled": true
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-POST-TEMPLATE Copy 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Load Testing MR",
							"type": "text",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "Normal",
							"type": "text",
							"disabled": true
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-POST-TEMPLATE Copy 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Load Testing MR",
							"type": "text",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "Normal",
							"type": "text",
							"disabled": true
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-POST-TEMPLATE Copy 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Load Testing MR",
							"type": "text",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "Normal",
							"type": "text",
							"disabled": true
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-POST-TEMPLATE Copy 9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Load Testing MR",
							"type": "text",
							"disabled": true
						},
						{
							"key": "priority",
							"value": "Normal",
							"type": "text",
							"disabled": true
						},
						{
							"key": "CSRFToken",
							"value": "ru",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form",
					"protocol": "http",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-ReportBuilder-Request-Main-Page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.indicatorID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(4144);  //    \r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/indicator/list?_=1682360946420",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"indicator",
						"list"
					],
					"query": [
						{
							"key": "_",
							"value": "1682360946420"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-ReportBuilder-Workflow-Steps",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/workflow/steps",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"workflow",
						"steps"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-ReportBuilder-Dependencies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/workflow/dependencies",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"workflow",
						"dependencies"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-ReportBuilder-Simple-Query-Large-Output",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/query?q={%22terms%22:[{%22id%22:%22title%22,%22operator%22:%22LIKE%22,%22match%22:%22*test*%22,%22gate%22:%22AND%22},{%22id%22:%22deleted%22,%22operator%22:%22=%22,%22match%22:0,%22gate%22:%22AND%22}],%22joins%22:[%22service%22,%22categoryName%22,%22status%22,%22initiatorName%22,%22action_history%22,%22stepFulfillmentOnly%22],%22sort%22:{},%22getData%22:[%224368%22,%224369%22,%224371%22,%224370%22,%224372%22,%224373%22,%224374%22,%224375%22,%224376%22,%224377%22,%224378%22,%224379%22,%224380%22,%224381%22,%224382%22,%224383%22,%224384%22],%22limit%22:1000,%22limitOffset%22:0}&x-filterData=recordID,title,service,categoryNames,stepTitle,lastStatus,lastName,firstName,action_history.time,action_history.comment,action_history.description,action_history.actionTextPasttense,action_history.approverName,action_history.stepID,action_history.actionType,stepFulfillmentOnly",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"query"
					],
					"query": [
						{
							"key": "q",
							"value": "{%22terms%22:[{%22id%22:%22title%22,%22operator%22:%22LIKE%22,%22match%22:%22*test*%22,%22gate%22:%22AND%22},{%22id%22:%22deleted%22,%22operator%22:%22=%22,%22match%22:0,%22gate%22:%22AND%22}],%22joins%22:[%22service%22,%22categoryName%22,%22status%22,%22initiatorName%22,%22action_history%22,%22stepFulfillmentOnly%22],%22sort%22:{},%22getData%22:[%224368%22,%224369%22,%224371%22,%224370%22,%224372%22,%224373%22,%224374%22,%224375%22,%224376%22,%224377%22,%224378%22,%224379%22,%224380%22,%224381%22,%224382%22,%224383%22,%224384%22],%22limit%22:1000,%22limitOffset%22:0}"
						},
						{
							"key": "x-filterData",
							"value": "recordID,title,service,categoryNames,stepTitle,lastStatus,lastName,firstName,action_history.time,action_history.comment,action_history.description,action_history.actionTextPasttense,action_history.approverName,action_history.stepID,action_history.actionType,stepFulfillmentOnly"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-ReportBuilder-Complex-Query",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/query?q={%22terms%22:[{%22id%22:%22title%22,%22operator%22:%22LIKE%22,%22match%22:%22*test*%22,%22gate%22:%22AND%22},{%22id%22:%22title%22,%22operator%22:%22LIKE%22,%22match%22:%22*testing*%22,%22gate%22:%22OR%22},{%22id%22:%22deleted%22,%22operator%22:%22=%22,%22match%22:0,%22gate%22:%22AND%22}],%22joins%22:[%22service%22,%22categoryName%22,%22status%22,%22initiatorName%22,%22action_history%22,%22stepFulfillmentOnly%22],%22sort%22:{},%22getData%22:[%223751%22,%223752%22,%223753%22,%223754%22,%223755%22,%223756%22,%223757%22,%223758%22,%223759%22,%223760%22,%223761%22],%22limit%22:1000,%22limitOffset%22:0}&x-filterData=recordID,title,service,categoryNames,stepTitle,lastStatus,lastName,firstName,action_history.time,action_history.comment,action_history.description,action_history.actionTextPasttense,action_history.approverName,action_history.stepID,action_history.actionType,stepFulfillmentOnly",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"query"
					],
					"query": [
						{
							"key": "q",
							"value": "{%22terms%22:[{%22id%22:%22title%22,%22operator%22:%22LIKE%22,%22match%22:%22*test*%22,%22gate%22:%22AND%22},{%22id%22:%22title%22,%22operator%22:%22LIKE%22,%22match%22:%22*testing*%22,%22gate%22:%22OR%22},{%22id%22:%22deleted%22,%22operator%22:%22=%22,%22match%22:0,%22gate%22:%22AND%22}],%22joins%22:[%22service%22,%22categoryName%22,%22status%22,%22initiatorName%22,%22action_history%22,%22stepFulfillmentOnly%22],%22sort%22:{},%22getData%22:[%223751%22,%223752%22,%223753%22,%223754%22,%223755%22,%223756%22,%223757%22,%223758%22,%223759%22,%223760%22,%223761%22],%22limit%22:1000,%22limitOffset%22:0}"
						},
						{
							"key": "x-filterData",
							"value": "recordID,title,service,categoryNames,stepTitle,lastStatus,lastName,firstName,action_history.time,action_history.comment,action_history.description,action_history.actionTextPasttense,action_history.approverName,action_history.stepID,action_history.actionType,stepFulfillmentOnly"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Forms-Main-Page-Detail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/formStack/categoryList/all?_=1682455908529",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"formStack",
						"categoryList",
						"all"
					],
					"query": [
						{
							"key": "_",
							"value": "1682455908529"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Forms-Form-Dependencies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/query?q={%22terms%22:[{%22id%22:%22categoryID%22,%22operator%22:%22=%22,%22match%22:%22leaf_secure%22,%22gate%22:%22AND%22},{%22id%22:%22stepID%22,%22operator%22:%22=%22,%22match%22:%22resolved%22,%22gate%22:%22AND%22}],%22joins%22:[%22recordResolutionData%22],%22sort%22:{},%22limit%22:500,%22limitOffset%22:0}",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"query"
					],
					"query": [
						{
							"key": "q",
							"value": "{%22terms%22:[{%22id%22:%22categoryID%22,%22operator%22:%22=%22,%22match%22:%22leaf_secure%22,%22gate%22:%22AND%22},{%22id%22:%22stepID%22,%22operator%22:%22=%22,%22match%22:%22resolved%22,%22gate%22:%22AND%22}],%22joins%22:[%22recordResolutionData%22],%22sort%22:{},%22limit%22:500,%22limitOffset%22:0}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-Forms-Create-Form-Title-Desc",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": true,
				"disableUrlEncoding": false,
				"strictSSL": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "service",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "title",
						"value": "Test Title",
						"type": "text",
						"disabled": true
					},
					{
						"key": "priority",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "numform_c79f6",
						"value": "1",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Max API Test - Create New Form",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Desc of API - Create Form",
							"type": "text"
						},
						{
							"key": "parentID",
							"value": "",
							"type": "text"
						},
						{
							"key": "CSRFToken",
							"value": "",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"description": "Returns form_f233b OR form_68691 ???",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/formEditor/new",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"formEditor",
						"new"
					],
					"query": [
						{
							"key": "XSRF-TOKEN",
							"value": "token",
							"disabled": true
						},
						{
							"key": "service",
							"value": null,
							"disabled": true
						},
						{
							"key": "title",
							"value": null,
							"disabled": true
						},
						{
							"key": "priority",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-ReportBuilder-TEMPLATE Copy 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-ReportBuilder-TEMPLATE Copy 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-ReportBuilder-TEMPLATE Copy 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-GET-TEMPLATE Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-GET-TEMPLATE Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-GET-TEMPLATE Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-GET-TEMPLATE Copy 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-GET-TEMPLATE Copy 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP-GET-TEMPLATE Copy 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP Portal - Form Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/categories",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP - Portal - Workflow",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.workflowID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(70);  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/workflow",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"workflow"
					]
				}
			},
			"response": []
		},
		{
			"name": "X PP Portal-FormWorkflow-CurrentStep",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;        //\r",
							"console.log(\"Response time: \" + time + \" ms\");\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.categoryID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner or nologin.pre-prod...\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/formWorkflow/[1780]/currentStep",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"formWorkflow",
						"[1780]",
						"currentStep"
					]
				}
			},
			"response": []
		},
		{
			"name": "PP - Portal - Workflow userActions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.actionType);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"AcceptJob\");  //    //form_854b7\r",
							"\r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/workflow/userActions",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"workflow",
						"userActions"
					]
				}
			},
			"response": []
		},
		{
			"name": "X PP - Form Get Specific Form Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getSpecific Form.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.indicatorID);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"form_c79f6\");  //    //form_854b7\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/_form_c79f6",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"_form_c79f6"
					]
				}
			},
			"response": []
		},
		{
			"name": "T PP - Form Get Specific Form - Flat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"// pm.test(\"Contains expected value\", function () {\r",
							"//     const response = pm.response.json();\r",
							"//     const jsonIDs = response.map(jsonID => jsonID.2096);      //jsonIDs is the array containing IDs\r",
							"//     //console.log(jsonIDs);\r",
							"//     pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"//                                         //2nd jsonIDs is the var defined on line 3 - Only works in collection runner\r",
							"//     console.log(jsonIDs);\r",
							"\r",
							"//     let currentJsonID = jsonIDs.shift();\r",
							"//     console.log(currentJsonID);\r",
							"//     pm.expect(currentJsonID).to.eql(\"1\");  \r",
							"// });\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/_form_00882/flat",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"_form_00882",
						"flat"
					]
				}
			},
			"response": []
		},
		{
			"name": "T PP - Form Get Specific Form - Export",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"// pm.test(\"Contains expected value\", function () {\r",
							"//     const response = pm.response.json();\r",
							"//     const jsonIDs = response.map(jsonID => jsonID.2096);      //jsonIDs is the array containing IDs\r",
							"//     //console.log(jsonIDs);\r",
							"//     pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"//                                         //2nd jsonIDs is the var defined on line 3 - Only works in collection runner\r",
							"//     console.log(jsonIDs);\r",
							"\r",
							"//     let currentJsonID = jsonIDs.shift();\r",
							"//     console.log(currentJsonID);\r",
							"//     pm.expect(currentJsonID).to.eql(\"1\");  \r",
							"// });\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/_form_00882/export",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"_form_00882",
						"export"
					]
				}
			},
			"response": []
		},
		{
			"name": "T PP - Form Get Specific Form - Workflow",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"// pm.test(\"Contains expected value\", function () {\r",
							"//     const response = pm.response.json();\r",
							"//     const jsonIDs = response.map(jsonID => jsonID.2096);      //jsonIDs is the array containing IDs\r",
							"//     //console.log(jsonIDs);\r",
							"//     pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"//                                         //2nd jsonIDs is the var defined on line 3 - Only works in collection runner\r",
							"//     console.log(jsonIDs);\r",
							"\r",
							"//     let currentJsonID = jsonIDs.shift();\r",
							"//     console.log(currentJsonID);\r",
							"//     pm.expect(currentJsonID).to.eql(\"1\");  \r",
							"// });\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/_form_00882/workflow",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"_form_00882",
						"workflow"
					]
				}
			},
			"response": []
		},
		{
			"name": "T PP-Form-GetSpecificFormRecord-RecordInfo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Form-getAPI-URL.  Status = 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var time = pm.response.responseTime;\r",
							"\r",
							"pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r",
							"\r",
							"\r",
							"pm.test(\"Contains expected value\", function () {\r",
							"    const response = pm.response.json();\r",
							"    const jsonIDs = response.map(jsonID => jsonID.name);      //jsonIDs is the array containing IDs\r",
							"    //console.log(jsonIDs);\r",
							"    pm.variables.set('jsonIDs', jsonIDs); //Creates a variable or updates an existing one.\r",
							"                                        //2nd jsonIDs is the var defined on line 3 - Only works in collection runner\r",
							"    console.log(jsonIDs);\r",
							"\r",
							"    let currentJsonID = jsonIDs.shift();\r",
							"    console.log(currentJsonID);\r",
							"    pm.expect(currentJsonID).to.eql(\"VHAPREHALLS\");  \r",
							"});\r",
							"\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "CSRFToken",
						"value": "{{CSRFToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://nologin.leaf-preprod.va.gov/Academy/Demo1/api/form/50/recordinfo",
					"protocol": "https",
					"host": [
						"nologin",
						"leaf-preprod",
						"va",
						"gov"
					],
					"path": [
						"Academy",
						"Demo1",
						"api",
						"form",
						"50",
						"recordinfo"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "ntlm"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "CSFRToken",
			"value": "Input CSFR Token",
			"type": "string",
			"disabled": true
		}
	]
}