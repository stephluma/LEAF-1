{"info":{"_postman_id":"24124bc6-a716-4c58-b40f-2450c5645837","name":"Not Used","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Local - Base URL","event":[{"listen":"test","script":{"id":"d2470e0d-a4b9-463d-bbf0-4f9394d3988e","exec":["pm.test(\"Base URL.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200))"],"type":"text/javascript"}}],"id":"386a290b-f124-42c5-92ca-5542d16c31b4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"https://localhost/LEAF_Request_Portal/index.php?a=printview&recordID=498","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","index.php"],"query":[{"key":"a","value":"printview"},{"key":"recordID","value":"498"}]}},"response":[]},{"name":"Dynamic Variables Test","event":[{"listen":"test","script":{"id":"bff05c7e-9a3d-4882-bb0f-9990f509709c","exec":["pm.test(\"Form-Trial&Error.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","var time = pm.response.responseTime;\r","\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","// FOR POST REQUESTS\r","pm.test(\"Form categoryID created\", function () {\r","    var jsonData = pm.response.json();\r","    //console.log.jsonData();\r","\r","                                                        //why is categoryID (Variable) inside quotes?\r","    pm.expect(jsonData.categoryID).to.eql(pm.collectionVariables.get(\"categoryID\").replaceAll(\" \", \"-\"));   \r","});\r","\r","\r","pm.test(\"Contains expected value\", function () {\r","    var jsonData = pm.response.json();\r","    //console.log.jsonData();\r","    pm.expect(jsonData.categoryID).to.eql(\"form_11e07\");\r","});\r","\r","//    \"categoryID\": \"form_11e07\",\r","//    \"categoryName\": \"AUT (Copy)\"\r","/*\r","pm.test(\"Response time is less than limit\", function() {\r","var limit = 10;\r","pm.expect(pm.response.responseTime, \"Response time was longer than \" + limit + \" ms.\").to.be.below(limit);\r","console.log(\"Response Time: \" + pm.response.responseTime + \" ms\" + \" / Response Date: \" + pm.response.headers.get(\"Date\"));\r","});\r","\r","*/\r",""],"type":"text/javascript"}},{"listen":"prerequest","script":{"id":"54f94fa0-477e-473c-b0de-5c3ed5184d6d","exec":["const random = Math.random().toString(36).substring(2);\r","const categoryID = \"Text to post\" + random;\r","pm.collectionVariables.set(\"categoryID\", categoryID);\r",""],"type":"text/javascript"}}],"id":"4639b36c-c2e4-4c03-a759-49dc9a9a114b","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"CSRFToken","value":"{{CSRFToken}}","type":"text","disabled":true}],"body":{"mode":"raw","raw":"{  \r\n    \"categoryID\": \"{{CategoryID}}\",\r\n    \"categoryName\": \"AUT (Copy)\"   \r\n}\r\n\r\nFOR POST REQUESTS  as these values will be posted","options":{"raw":{"language":"json"}}},"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/categories","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","categories"]}},"response":[]},{"name":"Local - FIX Form Indicators 2","event":[{"listen":"test","script":{"id":"f211c6f6-517d-47d4-9606-9a5eb5cdbb2e","exec":["pm.test(\"Form-Categories.  Status = 200\", function () {\r","    pm.response.to.have.status(200);\r","});     //\r","\r","var time = pm.response.responseTime;\r","pm.test('Response time: ' + time + ' ms', () => pm.response.to.have.status(200));\r","\r","pm.test(\"JSON Contains expected value\", function () {\r","    const response = pm.response.json();\r","    const catIDs = response.map(catID => catID.categoryID);         //catIDs is the array containing IDs\r","    console.log(catIDs);\r","    pm.variables.set('catIDs', catIDs); //2nd catIDs is the var defined on line 3 - Only works in collection runner\r","});\r","\r","/* \r","pm.test(\"Contains expected value\", function () {\r","    var jsonData = pm.response.json();\r","    console.log(jsonData.response);   \r","    pm.expect(jsonData.categoryID).to.eql(\"form_11e07\");  //iterate through\r","});\r","*/\r","\r","\r","\r","//    \"categoryID\": \"form_11e07\",\r","//    \"categoryName\": \"AUT (Copy)\"\r","/*\r","pm.test(\"Response time is less than limit\", function() {\r","var limit = 10;\r","pm.expect(pm.response.responseTime, \"Response time was longer than \" + limit + \" ms.\").to.be.below(limit);\r","console.log(\"Response Time: \" + pm.response.responseTime + \" ms\" + \" / Response Date: \" + pm.response.headers.get(\"Date\"));\r","});\r","\r","*/"],"type":"text/javascript"}}],"id":"2676261a-0d16-4bdf-a2a5-7740cd919b5d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"body":{"mode":"raw","raw":"{  \r\n    \"categoryID\": \"form_11e07\",\r\n    \"categoryName\": \"AUT (Copy)\"   \r\n}\r\n\r\nFOR POST REQUESTS","options":{"raw":{"language":"json"}}},"url":{"raw":"https://localhost/LEAF_Request_Portal/api/form/categories&id='form_b7c34'","protocol":"https","host":["localhost"],"path":["LEAF_Request_Portal","api","form","categories&id='form_b7c34'"]}},"response":[]}]}